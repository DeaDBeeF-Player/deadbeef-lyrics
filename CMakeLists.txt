CMAKE_MINIMUM_REQUIRED (VERSION 2.6)

PROJECT (lyrics)

#SET (LIBRARY ${CMAKE_PROJECT_NAME})

SET(CMAKE_MODULE_PATH ${lyrics_SOURCE_DIR}/cmake)

SET(CMAKE_C_FLAGS "-std=c99")

ADD_DEFINITIONS(-DDEADBEEF_PREFIX=\"${CMAKE_INSTALL_PREFIX}\")
ADD_DEFINITIONS(-D_GNU_SOURCE)
ADD_DEFINITIONS(-Wall)

FIND_FILE(DEADBEEF_API deadbeef/deadbeef.h)

IF(NOT DEADBEEF_API)
    message(FATAL_ERROR "DeaDBeeF API - not found")
ELSE(NOT DEADBEEF_API)
    message(STATUS "DeaDBeeF API - found (${DEADBEEF_API})")
ENDIF(NOT DEADBEEF_API)

INCLUDE_DIRECTORIES(BEFORE SYSTEM ${CMAKE_INSTALL_PREFIX}/include)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})

FIND_PACKAGE(CURL REQUIRED)
INCLUDE_DIRECTORIES(${CURL_INCLUDE_DIRS})

FIND_PACKAGE(PCRE REQUIRED)
INCLUDE_DIRECTORIES(${PCRE_INCLUDE_DIRS})

FIND_PACKAGE(GTK2 REQUIRED)
INCLUDE_DIRECTORIES(${GTK2_INCLUDE_DIRS})

SET(SOURCES
    lyrics.c
    )

ADD_LIBRARY(${CMAKE_PROJECT_NAME} SHARED ${SOURCES})

SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES PREFIX "")

TARGET_LINK_LIBRARIES(${CMAKE_PROJECT_NAME} ${CURL_LIBRARIES})
TARGET_LINK_LIBRARIES(${CMAKE_PROJECT_NAME} ${PCRE_LIBRARIES})
TARGET_LINK_LIBRARIES(${CMAKE_PROJECT_NAME} ${GTK2_LIBRARIES})

INSTALL(TARGETS ${CMAKE_PROJECT_NAME} LIBRARY DESTINATION lib/deadbeef/)
#install(FILES ${COMPILED_TRANSLATIONS} DESTINATION share/deadbeef/translations)
